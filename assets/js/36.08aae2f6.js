(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{387:function(t,e,s){"use strict";s.r(e);var a=s(14),r=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"saml-integration"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#saml-integration"}},[t._v("#")]),t._v(" SAML Integration")]),t._v(" "),e("p",[t._v("SAML2 is version 2 of SAML (Security Assertion Markup Language), an XML-based standard for exchanging authentication and authorization data. The document of SAML2 Specifications is available "),e("a",{attrs:{href:"http://saml.xml.org/saml-specifications",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("p",[t._v("According to SAML2 Specifications, two parties which exchange\nauthentication and authorization data are called SP (Service Provider)\nand IDP (Identity Provider). IDP issues the security assertion and SP\nconsumes it. The following scenario describes a SAML2 exchange:")]),t._v(" "),e("ol",[e("li",[t._v("A user, via web browser, requests a resource at the SP.")]),t._v(" "),e("li",[t._v("The SP checks and finds no security context for the request, then it\nredirects to the SSO service.")]),t._v(" "),e("li",[t._v("The browser requests the SSO service at IDP.")]),t._v(" "),e("li",[t._v("The IDP responds with an XHTML form after performing security check and\nidentifying the user. The form contains SAMLResponse value.")]),t._v(" "),e("li",[t._v("The browser requests assertion consumer service at the SP.")]),t._v(" "),e("li",[t._v("The consumer service processes the SAMLResponse, creates a security\ncontext and redirects to the target resource.")]),t._v(" "),e("li",[t._v("The browser requests target resource again.")]),t._v(" "),e("li",[t._v("The SP finds a security context, so it returns the target resource.")])]),t._v(" "),e("p",[e("img",{attrs:{src:"/img/saml/saml-sequence.png",alt:"image0"}})]),t._v(" "),e("p",[t._v("eXo Platform SAML integration supports the SP role thus can be\nintegrated with various "),e("a",{attrs:{href:"https://en.wikipedia.org/wiki/SAML-based_products_and_services",target:"_blank",rel:"noopener noreferrer"}},[t._v("IdP providers"),e("OutboundLink")],1),t._v("\nsuch as Salesforce or Shibboleth.")]),t._v(" "),e("p",[t._v("This chapter covers the following subjects:")]),t._v(" "),e("ul",[e("li",[e("p",[e("a",{attrs:{href:"#exo-platform-as-saml2-sp"}},[t._v("eXo Platform as SAML2 SP")])])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"#generating-and-using-your-own-keystore"}},[t._v("Generating and using your own keystore")])])])]),t._v(" "),e("h2",{attrs:{id:"exo-platform-as-saml2-sp"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#exo-platform-as-saml2-sp"}},[t._v("#")]),t._v(" eXo Platform as SAML2 SP")]),t._v(" "),e("ol",[e("li",[t._v("Install SAML2 add-on with the command:")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$PLATFORM_SP")]),t._v("/addon "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" exo-saml\n")])])]),e("ol",{attrs:{start:"2"}},[e("li",[t._v("Open the file "),e("code",[t._v("$PLATFORM_SP/gatein/conf/exo.properties")]),t._v(".")])]),t._v(" "),e("p",[t._v("Edit the following properties (add them if they don't exist):")]),t._v(" "),e("div",{staticClass:"language-properties extra-class"},[e("pre",{pre:!0,attrs:{class:"language-properties"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# SSO")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("gatein.sso.enabled")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("true")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("gatein.sso.saml.sp.enabled")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("true")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("gatein.sso.callback.enabled")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("true")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("gatein.sso.valve.enabled")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("true")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("gatein.sso.valve.class")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("org.gatein.sso.saml.plugin.valve.ServiceProviderAuthenticator")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("gatein.sso.filter.login.sso.url")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("/portal/dologin")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("gatein.sso.filter.initiatelogin.enabled")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("false")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("gatein.sso.filter.logout.enabled")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("true")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("gatein.sso.filter.logout.class")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("org.gatein.sso.saml.plugin.filter.SAML2LogoutFilter")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("gatein.sso.filter.logout.url")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("${gatein.sso.sp.url}?GLO=true ")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("gatein.sso.saml.config.file")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("${exo.conf.dir}/saml2/picketlink-sp.xml")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Custom properties")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("gatein.sso.sp.host")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("SP_HOSTNAME")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("gatein.sso.sp.url")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("${gatein.sso.sp.host}/portal/dologin")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("gatein.sso.idp.host")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("IDP_HOSTNAME")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("gatein.sso.idp.url")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("IDP_SAML_ENDPOINT")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("gatein.sso.idp.url.logout")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("IDP_SAML_ENDPOINT_LOGOUT")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("gatein.sso.idp.alias")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("IDP_SIGNING_ALIAS")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("gatein.sso.idp.signingkeypass")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("IDP_SIGNING_KEY_PASS")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("gatein.sso.idp.keystorepass")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("IDP_KEYSTORE_PASS")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# WARNING: This bundled keystore is only for testing purposes. You should generate and use your own keystore!")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("gatein.sso.picketlink.keystore")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("${exo.conf.dir}/saml2/jbid_test_keystore.jks")]),t._v("\n")])])]),e("p",[t._v("You need to modify "),e("strong",[t._v("gatein.sso.idp.host")]),t._v(", "),e("strong",[t._v("gatein.sso.idp.url")]),t._v(", "),e("strong",[t._v("gatein.sso.idp.url.logout")]),t._v(", "),e("strong",[t._v("gatein.sso.idp.alias")]),t._v(", "),e("strong",[t._v("gatein.sso.idp.signingkeypass")]),t._v(" and "),e("strong",[t._v("gatein.sso.idp.keystorepass")]),t._v(" according to your environment setup. You also need to install your own keystore as instructed in "),e("a",{attrs:{href:"#generating-and-using-your-own-keystore"}},[t._v("Generating and using your own keystore")]),t._v(".")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("If your IDP send username in assertion with some char in capital letter, and you want to force lower case, you can add this property :")]),t._v(" "),e("div",{staticClass:"language-properties extra-class"},[e("pre",{pre:!0,attrs:{class:"language-properties"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("gatein.sso.saml.username.forcelowercase")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("true")]),t._v("\n")])])]),e("ol",{attrs:{start:"3"}},[e("li",[t._v("Download and import your generated IDP certificate to your keystore\nusing this command:")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("keytool "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-keystore")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$PLATFORM_SP")]),t._v("/gatein/conf/saml/jbid_test_keystore.jks "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-file")]),t._v(" idp-certificate.crt "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-alias")]),t._v(" Identity_Provider-idp\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("The Default password of the keystore jbid_test_keystore.jks is "),e("strong",[t._v("store123")]),t._v(".")]),t._v(" "),e("ol",{attrs:{start:"4"}},[e("li",[t._v("Start up the platform: use the following command on Linux operating systems:")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("./start_eXo.sh\n")])])]),e("p",[t._v("and use this command for Windows operating systems:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("start_eXo.bat\n")])])]),e("h2",{attrs:{id:"generating-and-using-your-own-keystore"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#generating-and-using-your-own-keystore"}},[t._v("#")]),t._v(" Generating and using your own keystore")]),t._v(" "),e("p",[t._v("The default "),e("code",[t._v("jbid_test_keystore.jks")]),t._v(" is useful for testing purpose,\nbut in eXo Platform you need to generate and use your own keystore as\nfollows:")]),t._v(" "),e("ol",[e("li",[t._v("Generate your file using the "),e("strong",[t._v("keytool")]),t._v(" command:")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("keytool "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-genkey")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-alias")]),t._v(" secure-key "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-keyalg")]),t._v(" RSA "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-keystore")]),t._v(" secure-keystore.jks\n")])])]),e("p",[t._v("You will be asked to enter a "),e("em",[t._v("keystore password")]),t._v(" and a "),e("em",[t._v("key password")]),t._v(".\nRemember them to use in next steps.\nThis command create a couple (publicKey, privateKey). During IDP configuration, you can provide the publicKey to the IDP, which will use is to encode the assertion content.\nThen, when eXo receive the assertion, it uses the privateKey present in the keystore to decode the assertion.")]),t._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[e("p",[t._v("Install your file to\n"),e("code",[t._v("PLATFORM_*/gatein/conf/saml2/")])])]),t._v(" "),e("li",[e("p",[t._v("Modify picketlink configuration properties to provide your "),e("strong",[t._v("keystore\npassword")]),t._v(" and a "),e("strong",[t._v("key password")]),t._v(". In exo.properties file, change properties")])])]),t._v(" "),e("div",{staticClass:"language-properties extra-class"},[e("pre",{pre:!0,attrs:{class:"language-properties"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("gatein.sso.idp.alias")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("fellowtest")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("gatein.sso.idp.keystorepass")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("store123")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("gatein.sso.idp.signingkeypass")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("password")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("gatein.sso.picketlink.keystore")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("${exo.conf.dir}/saml2/jbid_test_keystore.jks")]),t._v("\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("On Windows, you should use the absolute link to the keystore file, for the property "),e("code",[t._v("gatein.sso.picketlink.keystore")]),t._v(".")])])])])])}),[],!1,null,null,null);e.default=r.exports}}]);